- name: get list of VMs
  vars:
    ansible_python_interpreter: '/usr/bin/python'
  virt:
      command: "list_vms"
  register: vms

#- name: Display VMs
#  shell: echo {{ item }}
#  with_items: "{{ vms.list_vms }}"

#- name: "Remove file vms_state.txt"
#  file:
#    path: /root/vms_state.txt
#    state: absent

# Wait for 10 mins to see if VMs will go to shut off state
#- include_tasks: vms_state.yml 


- name: stop vm if not already stopped by itself
  vars:
    ansible_python_interpreter: '/usr/bin/python'
  virt:
      name: "{{ item }}"
      state: destroyed
  with_items: "{{ vms.list_vms }}"

- name: Sleep for 10 seconds
  shell: sleep 10

- name: Enable dnsmasq and reload daemon
  systemd:
    name: dnsmasq
    state: restarted
    enabled: yes

- name: Sleep for 10 seconds
  shell: sleep 10


- name: start VMs
  vars:
    ansible_python_interpreter: '/usr/bin/python'
  virt:
      name: "{{ item }}"
      state: running
  with_items: "{{ vms.list_vms }}"

- name: "Remove file /root/ocp-install/.openshift_install.log"
  file:
    path: /root/ocp-install/.openshift_install.log
    state: absent

- name: Run bootstrap - NOTE: THIS STEP WILL TAKE Approx 30+ mins to complete
  shell: "cd ~/ocp-install;openshift-install --dir=. wait-for bootstrap-complete --log-level=debug "


- name: Validate logs mesg
  shell: cat /root/ocp-install/.openshift_install.log
  register: output_status
  until: '"Bootstrap status: complete" in output_status.stdout'
  retries: "{{ bootstrap_status_wait_retries }}"
  delay: "{{ bootstrap_status_wait_delay }}"
  ignore_errors: true
  
